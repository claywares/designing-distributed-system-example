version: '3.8'

services:
  # Nginx负载均衡器
  nginx:
    image: nginx:alpine
    container_name: load-balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./50x.html:/usr/share/nginx/html/50x.html
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - lb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx_status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务实例
  backend1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend-1
    environment:
      - SERVER_ID=backend-1
      - PORT=8000
    networks:
      - lb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend-2
    environment:
      - SERVER_ID=backend-2
      - PORT=8000
    networks:
      - lb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend3:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend-3
    environment:
      - SERVER_ID=backend-3
      - PORT=8000
    networks:
      - lb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 监控和指标收集（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - lb-network
    restart: unless-stopped

  # Grafana监控面板（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - lb-network
    restart: unless-stopped

volumes:
  grafana-storage:

networks:
  lb-network:
    driver: bridge
